"""
Задание 5.**
Приведен наивный алгоритм нахождения i-го по счёту
простого числа (через перебор делителей).
Попробуйте решить эту же задачу,
применив алгоритм "Решето Эратосфена" (https://younglinux.info/algorithm/sieve)
Подсказка:
Сравните алгоритмы по времени на разных порядковых номерах чисел:
10, 100, 1000
Опишите результаты, сделайте выводы, где и какой алгоритм эффективнее
Подумайте и по возможности определите сложность каждого алгоритма
Укажите формулу сложности О-нотация каждого алгоритма
и сделайте обоснвование рез-ам
"""
from timeit import timeit


def simple(i):      # O(n^2)
    """Без использования «Решета Эратосфена»"""
    count = 1
    n = 2
    while count <= i:
        t = 1
        is_simple = True
        while t <= n:
            if n % t == 0 and t != 1 and t != n:
                is_simple = False
                break
            t += 1
        if is_simple:
            if count == i:
                break
            count += 1
        n += 1
    return n


def eratosthenes_sieve(i):      # O(n log (log n))
    """С использованием «Решета Эратосфена»"""
    n = 2
    l = 10000
    search_list = [num for num in range(l)]
    search_list[1] = 0
    while n < l:
        if search_list[n] != 0:
            x = n * 2
            while x < l:
                search_list[x] = 0
                x += n
        n += 1
    return [el for el in search_list if el != 0][i - 1]


i = int(input('Введите порядковый номер искомого простого числа: '))
print(simple(i))
print(eratosthenes_sieve(i))

print(
    timeit(
        'simple(i)',
        globals=globals(),
        number=1000))

print(
    timeit(
        'eratosthenes_sieve(i)',
        globals=globals(),
        number=1000))

"""
Время поиска 10-го числа для 100/1000 повторов:
0.001990500000000228/0.018350600000000217
0.37482689999999996/3.8117541
Время поиска 100-го числа для 100/1000 повторов:
0.23207770000000005/2.348792
0.3821382000000004/3.7634774
Время поиска 1000-го числа для 100/1000 повторов:
39.093396999999996/391.6280201
0.37277550000000303/3.7036926999999764
алгоритм "Решето Эратосфена" существенно сокращает время работы при больших данных. Но на небольших числах большой
разницы во времени нет, простой алгоритм чаще выигрывает.
"""
